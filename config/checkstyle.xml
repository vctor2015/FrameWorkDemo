<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!-- Generated by RHY @will_awoke -->

<module name="Checker">

    <property name="charset" value="UTF-8"/>
    <property name="severity" value="warning"/>

    <module name="SuppressionFilter">
        <property name="file" value="${samedir}/check_suppression.xml"/>
        <property name="optional" value="false"/>
    </module>

    <!-- Checks for Size Violations.  -->
    <!-- 检查文件的长度 -->
    <module name="FileLength">
        <property name="max" value="2500"/>
    </module>

    <module name="TreeWalker">

        <!-- Checks for imports    -->
        <!-- 必须导入类的完整路径，即不能使用*导入所需的类 -->
        <module name="AvoidStarImport"/>

        <!-- 检查是否从非法的包中导入了类-->
        <module name="IllegalImport"/>

        <!-- 检查是否导入了不必显示导入的类-->
        <module name="RedundantImport"/>

        <!-- 检查是否导入的包没有使用-->
        <module name="UnusedImports"/>

        <!-- Checks for whitespace -->
        <!-- 检查空格 -->
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace">
            <property name="severity" value="ignore"/>
        </module>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter">
            <property name="severity" value="ignore"/>
        </module>
        <module name="NoWhitespaceBefore">
            <property name="severity" value="ignore"/>
        </module>
        <module name="OperatorWrap">
            <property name="option" value="eol"/>
        </module>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter">
            <property name="severity" value="ignore"/>
        </module>
        <module name="WhitespaceAround">
            <property name="severity" value="ignore"/>
        </module>

        <!-- 检查类和接口的javadoc -->
        <module name="JavadocType">
            <property name="scope" value="protected"/>
            <property name="allowMissingParamTags" value="true"/>
        </module>

        <!-- 检查方法的javadoc的注释 检查public、protected修饰范围-->
        <module name="JavadocMethod">
            <property name="scope" value="protected"/>
            <property name="excludeScope" value="private"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingThrowsTags" value="true"/>
            <property name="allowMissingReturnTag" value="true"/>
            <property name="allowUndeclaredRTE" value="true"/>
            <property name="allowThrowsTagsForSubclasses" value="true"/>
            <property name="allowMissingPropertyJavadoc" value="true"/>
            <property name="tokens" value="METHOD_DEF"/>
        </module>

        <!-- 检查类变量的注释 检查protected修饰范围-->
        <module name="JavadocVariable">
            <property name="scope" value="protected"/>
            <property name="excludeScope" value="public"/>
        </module>

        <!-- 检查"{" -->
        <module name="LeftCurly">
            <property name="tokens" value="CLASS_DEF,INTERFACE_DEF,METHOD_DEF"/>
        </module>

        <!-- 检查"}" -->
        <module name="RightCurly">
            <property name="severity" value="ignore"/>
        </module>

        <!-- NeedBraces 检查是否应该使用括号的地方没有加括号
          tokens: 定义检查的类型 -->
        <module name="NeedBraces">
            <property name="severity" value="ignore"/>
        </module>

        <!-- 检查在重写了equals方法后是否重写了hashCode方法 -->
        <module name="EqualsHashCode"/>

        <module name="IllegalInstantiation">
            <property name="classes" value="java.lang.Boolean"/>
        </module>

        <!-- 命名规范   -->
        <module name="PackageName"/>
        <module name="TypeName"/>
        <module name="MethodName"/>
        <module name="ConstantName"/>
        <module name="MemberName">
            <property name="format" value="^m[A-Z][a-zA-Z0-9]*$"/>
        </module>
        <module name="LocalFinalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>
        <module name="LocalVariableName"/>
        <module name="StaticVariableName">
            <property name="format" value="^s[A-Z][a-zA-Z0-9]*$"/>
        </module>

        <!-- parameters -->
        <module name="ParameterName">
            <property name="format" value="(^[a-z][a-zA-Z0-9_]{0,29}$)"/>
        </module>

        <!-- 代码缩进 -->
        <module name="Indentation">
            <property name="severity" value="ignore"/>
        </module>

        <!-- Checks for redundant exceptions declared in throws clause such as duplicates, unchecked exceptions or subclasses of another declared exception.
          检查是否抛出了多余的异常
        <module name="RedundantThrows">
            <property name="logLoadErrors" value="true"/>
            <property name="suppressLoadErrors" value="true"/>
        </module>
        -->

        <!--  检查boolean值是否冗余的地方 -->
        <module name="SimplifyBooleanExpression"/>

        <!--  检查是否存在过度复杂的boolean返回值 -->
        <module name="SimplifyBooleanReturn"/>

        <!-- 只有私有构造器的类必须声明为final -->
        <module name="FinalClass"/>

        <!--  确保Utils类（只提供static方法和属性的类）没有public构造器 -->
        <module name="HideUtilityClassConstructor"/>

        <module name="VisibilityModifier">
            <property name="severity" value="ignore"/>
        </module>

        <!-- 每一行只能定义一个变量 -->
        <module name="MultipleVariableDeclarations">
        </module>

        <!-- 数组是否为java风格-->
        <module name="ArrayTypeStyle"/>

        <module name="MagicNumber">
            <property name="severity" value="ignore"/>
        </module>

        <!-- 检查是否存在TODO（待处理）-->
        <module name="TodoComment"/>

        <!--  检查是否在long类型是否定义了大写的L.字母小写l和数字1（一）很相似 -->
        <module name="UpperEll"/>

        <!--  检查switch语句是否有‘default’从句 -->
        <module name="MissingSwitchDefault"/>

        <!--检查switch中case后是否加入了跳出语句，例如：return、break、throw、continue -->
        <module name="FallThrough"/>

        <!-- Checks the number of parameters of a method or constructor. max default 7个. -->
        <module name="ParameterNumber"/>

        <!-- 每行字符数 -->
        <module name="LineLength">
            <property name="max" value="100"/>
            <property name="ignorePattern"
                      value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
        </module>

        <!-- Checks for long methods and constructors. max default 150行. max=300 设置长度300 -->
        <module name="MethodLength">
            <property name="max" value="300"/>
        </module>

        <!-- 检查修饰符的顺序 -->
        <module name="ModifierOrder"/>

        <!-- 检查是否有多余的修饰符，例如：接口中的方法不必使用public、abstract修饰  -->
        <module name="RedundantModifier">
        </module>

        <!--- 字符串比较必须使用 equals() -->
        <module name="StringLiteralEquality">
        </module>

        <!-- if-else嵌套语句个数 最多4层 -->
        <module name="NestedIfDepth">
            <property name="severity" value="ignore"/>
        </module>

        <!-- try-catch 嵌套语句个数 最多2层 -->
        <module name="NestedTryDepth">
            <property name="severity" value="ignore"/>
        </module>

        <!-- 返回个数 -->
        <module name="ReturnCount">
            <property name="max" value="5"/>
            <property name="format" value="^$"/>
        </module>

    </module>

</module>